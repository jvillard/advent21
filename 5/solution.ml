type vent = {from: int * int; to_: int * int}

let example =
  [ {from= (0, 9); to_= (5, 9)}
  ; {from= (8, 0); to_= (0, 8)}
  ; {from= (9, 4); to_= (3, 4)}
  ; {from= (2, 2); to_= (2, 1)}
  ; {from= (7, 0); to_= (7, 4)}
  ; {from= (6, 4); to_= (2, 0)}
  ; {from= (0, 9); to_= (2, 9)}
  ; {from= (3, 4); to_= (1, 4)}
  ; {from= (0, 0); to_= (8, 8)}
  ; {from= (5, 5); to_= (8, 2)} ]

let mk_ocean ~max_coord:(max_col, max_row) = Array.make_matrix max_col max_row 0

let bump matrix (x, y) = matrix.(x).(y) <- matrix.(x).(y) + 1

let sort_pair pair = match pair with x, y when x > y -> (y, x) | _ -> pair

let draw_vertical ocean ~x ~ys vent =
  let y1, y2 = sort_pair ys in
  for y = y1 to y2 do
    bump ocean (x, y)
  done

let draw_horizontal ocean ~y ~xs vent =
  let x1, x2 = sort_pair xs in
  for x = x1 to x2 do
    bump ocean (x, y)
  done

let draw_line ocean vent =
  let {from= from_x, from_y; to_= to_x, to_y} = vent in
  if from_x = to_x || from_y = to_y then
    if from_x = to_x then draw_vertical ocean ~x:from_x ~ys:(from_y, to_y) vent
    else draw_horizontal ocean ~y:from_y ~xs:(from_x, to_x) vent

let draw_all ocean vents = List.iter (fun vent -> draw_line ocean vent) vents

let count_at_least_two ocean =
  let count = ref 0 in
  Array.iter (fun col -> Array.iter (fun n -> if n >= 2 then incr count) col) ocean ;
  !count

let main ~max_coord vents =
  let ocean = mk_ocean ~max_coord in
  draw_all ocean vents ;
  let count = count_at_least_two ocean in
  Format.printf "solution= %d@." count ;
  ()

let () = main ~max_coord:(10, 10) example

let input =
  [ {from= (503, 977); to_= (843, 637)}
  ; {from= (437, 518); to_= (437, 225)}
  ; {from= (269, 250); to_= (625, 250)}
  ; {from= (846, 751); to_= (646, 751)}
  ; {from= (18, 731); to_= (402, 731)}
  ; {from= (749, 923); to_= (749, 986)}
  ; {from= (557, 758); to_= (557, 797)}
  ; {from= (589, 54); to_= (589, 616)}
  ; {from= (20, 136); to_= (819, 935)}
  ; {from= (123, 983); to_= (12, 983)}
  ; {from= (802, 624); to_= (709, 624)}
  ; {from= (600, 458); to_= (128, 458)}
  ; {from= (209, 703); to_= (459, 703)}
  ; {from= (944, 415); to_= (742, 415)}
  ; {from= (270, 718); to_= (656, 332)}
  ; {from= (168, 339); to_= (283, 339)}
  ; {from= (558, 172); to_= (695, 309)}
  ; {from= (519, 524); to_= (480, 524)}
  ; {from= (456, 400); to_= (134, 722)}
  ; {from= (355, 961); to_= (352, 961)}
  ; {from= (757, 158); to_= (49, 866)}
  ; {from= (300, 254); to_= (618, 254)}
  ; {from= (554, 275); to_= (859, 275)}
  ; {from= (47, 612); to_= (622, 37)}
  ; {from= (696, 885); to_= (696, 856)}
  ; {from= (342, 803); to_= (342, 429)}
  ; {from= (830, 649); to_= (254, 73)}
  ; {from= (54, 921); to_= (958, 17)}
  ; {from= (72, 691); to_= (818, 691)}
  ; {from= (80, 72); to_= (80, 546)}
  ; {from= (762, 649); to_= (762, 371)}
  ; {from= (117, 39); to_= (605, 39)}
  ; {from= (778, 605); to_= (610, 773)}
  ; {from= (159, 25); to_= (67, 25)}
  ; {from= (462, 825); to_= (766, 825)}
  ; {from= (295, 167); to_= (357, 167)}
  ; {from= (741, 379); to_= (11, 379)}
  ; {from= (942, 230); to_= (942, 26)}
  ; {from= (802, 672); to_= (802, 311)}
  ; {from= (672, 759); to_= (330, 759)}
  ; {from= (419, 97); to_= (848, 526)}
  ; {from= (244, 262); to_= (938, 956)}
  ; {from= (281, 988); to_= (281, 879)}
  ; {from= (471, 451); to_= (471, 907)}
  ; {from= (238, 387); to_= (238, 665)}
  ; {from= (907, 129); to_= (907, 368)}
  ; {from= (119, 734); to_= (155, 770)}
  ; {from= (306, 119); to_= (306, 568)}
  ; {from= (166, 175); to_= (166, 277)}
  ; {from= (591, 32); to_= (591, 855)}
  ; {from= (779, 324); to_= (916, 324)}
  ; {from= (785, 245); to_= (884, 245)}
  ; {from= (504, 884); to_= (781, 884)}
  ; {from= (405, 967); to_= (664, 967)}
  ; {from= (17, 16); to_= (989, 988)}
  ; {from= (429, 944); to_= (729, 944)}
  ; {from= (15, 31); to_= (918, 934)}
  ; {from= (22, 963); to_= (971, 14)}
  ; {from= (199, 280); to_= (481, 562)}
  ; {from= (792, 550); to_= (792, 485)}
  ; {from= (215, 141); to_= (215, 58)}
  ; {from= (511, 560); to_= (511, 224)}
  ; {from= (940, 134); to_= (166, 908)}
  ; {from= (666, 212); to_= (666, 193)}
  ; {from= (881, 514); to_= (117, 514)}
  ; {from= (271, 416); to_= (614, 73)}
  ; {from= (354, 784); to_= (354, 41)}
  ; {from= (866, 152); to_= (866, 969)}
  ; {from= (75, 924); to_= (868, 131)}
  ; {from= (944, 507); to_= (944, 556)}
  ; {from= (726, 315); to_= (624, 315)}
  ; {from= (195, 122); to_= (593, 520)}
  ; {from= (463, 311); to_= (946, 794)}
  ; {from= (734, 698); to_= (734, 953)}
  ; {from= (520, 98); to_= (915, 98)}
  ; {from= (125, 139); to_= (616, 139)}
  ; {from= (570, 841); to_= (206, 477)}
  ; {from= (430, 442); to_= (430, 893)}
  ; {from= (653, 59); to_= (653, 155)}
  ; {from= (906, 883); to_= (314, 291)}
  ; {from= (932, 157); to_= (100, 989)}
  ; {from= (526, 244); to_= (362, 244)}
  ; {from= (28, 837); to_= (792, 73)}
  ; {from= (386, 426); to_= (386, 673)}
  ; {from= (121, 66); to_= (203, 66)}
  ; {from= (747, 121); to_= (392, 476)}
  ; {from= (590, 989); to_= (230, 989)}
  ; {from= (795, 83); to_= (795, 398)}
  ; {from= (741, 522); to_= (741, 677)}
  ; {from= (142, 166); to_= (470, 166)}
  ; {from= (13, 645); to_= (493, 165)}
  ; {from= (418, 567); to_= (418, 970)}
  ; {from= (94, 877); to_= (782, 189)}
  ; {from= (603, 426); to_= (603, 916)}
  ; {from= (364, 304); to_= (191, 304)}
  ; {from= (754, 146); to_= (754, 507)}
  ; {from= (294, 678); to_= (438, 678)}
  ; {from= (641, 633); to_= (217, 633)}
  ; {from= (31, 133); to_= (831, 933)}
  ; {from= (250, 976); to_= (250, 355)}
  ; {from= (274, 558); to_= (899, 558)}
  ; {from= (818, 507); to_= (693, 507)}
  ; {from= (414, 465); to_= (924, 975)}
  ; {from= (116, 729); to_= (116, 951)}
  ; {from= (960, 843); to_= (149, 32)}
  ; {from= (724, 127); to_= (498, 353)}
  ; {from= (552, 43); to_= (964, 43)}
  ; {from= (224, 853); to_= (224, 363)}
  ; {from= (768, 214); to_= (768, 88)}
  ; {from= (518, 414); to_= (518, 119)}
  ; {from= (917, 824); to_= (948, 824)}
  ; {from= (37, 81); to_= (882, 926)}
  ; {from= (333, 390); to_= (967, 390)}
  ; {from= (175, 453); to_= (388, 240)}
  ; {from= (960, 395); to_= (960, 697)}
  ; {from= (468, 37); to_= (468, 275)}
  ; {from= (745, 318); to_= (425, 318)}
  ; {from= (676, 425); to_= (903, 198)}
  ; {from= (531, 663); to_= (86, 663)}
  ; {from= (557, 834); to_= (557, 967)}
  ; {from= (650, 931); to_= (383, 664)}
  ; {from= (906, 197); to_= (906, 567)}
  ; {from= (675, 637); to_= (326, 288)}
  ; {from= (227, 977); to_= (51, 977)}
  ; {from= (347, 524); to_= (793, 970)}
  ; {from= (778, 850); to_= (778, 342)}
  ; {from= (343, 155); to_= (343, 739)}
  ; {from= (970, 167); to_= (161, 976)}
  ; {from= (800, 127); to_= (800, 667)}
  ; {from= (531, 533); to_= (193, 533)}
  ; {from= (222, 776); to_= (222, 873)}
  ; {from= (922, 29); to_= (13, 938)}
  ; {from= (452, 808); to_= (452, 793)}
  ; {from= (926, 142); to_= (926, 198)}
  ; {from= (940, 93); to_= (55, 978)}
  ; {from= (335, 51); to_= (938, 654)}
  ; {from= (789, 352); to_= (307, 352)}
  ; {from= (457, 419); to_= (469, 419)}
  ; {from= (463, 12); to_= (463, 132)}
  ; {from= (881, 95); to_= (431, 95)}
  ; {from= (531, 57); to_= (531, 40)}
  ; {from= (179, 308); to_= (516, 308)}
  ; {from= (767, 907); to_= (629, 907)}
  ; {from= (362, 457); to_= (362, 262)}
  ; {from= (774, 896); to_= (154, 276)}
  ; {from= (549, 243); to_= (247, 243)}
  ; {from= (130, 933); to_= (202, 933)}
  ; {from= (266, 639); to_= (189, 716)}
  ; {from= (209, 717); to_= (209, 844)}
  ; {from= (625, 296); to_= (625, 575)}
  ; {from= (739, 785); to_= (873, 785)}
  ; {from= (713, 857); to_= (94, 238)}
  ; {from= (97, 28); to_= (937, 868)}
  ; {from= (876, 734); to_= (344, 202)}
  ; {from= (180, 608); to_= (557, 608)}
  ; {from= (669, 566); to_= (669, 389)}
  ; {from= (112, 779); to_= (267, 624)}
  ; {from= (325, 669); to_= (449, 669)}
  ; {from= (102, 915); to_= (357, 915)}
  ; {from= (882, 839); to_= (882, 512)}
  ; {from= (330, 699); to_= (330, 858)}
  ; {from= (773, 851); to_= (773, 429)}
  ; {from= (171, 187); to_= (450, 187)}
  ; {from= (166, 726); to_= (166, 74)}
  ; {from= (15, 134); to_= (750, 869)}
  ; {from= (245, 126); to_= (245, 518)}
  ; {from= (919, 484); to_= (919, 602)}
  ; {from= (918, 900); to_= (918, 372)}
  ; {from= (736, 515); to_= (708, 487)}
  ; {from= (790, 777); to_= (790, 303)}
  ; {from= (479, 541); to_= (381, 541)}
  ; {from= (85, 243); to_= (317, 475)}
  ; {from= (619, 441); to_= (619, 823)}
  ; {from= (688, 658); to_= (688, 404)}
  ; {from= (381, 475); to_= (891, 985)}
  ; {from= (461, 529); to_= (145, 213)}
  ; {from= (833, 885); to_= (404, 885)}
  ; {from= (315, 502); to_= (315, 770)}
  ; {from= (450, 934); to_= (740, 934)}
  ; {from= (634, 334); to_= (634, 202)}
  ; {from= (785, 866); to_= (785, 913)}
  ; {from= (976, 627); to_= (976, 102)}
  ; {from= (65, 491); to_= (570, 491)}
  ; {from= (974, 257); to_= (503, 728)}
  ; {from= (662, 938); to_= (720, 938)}
  ; {from= (232, 472); to_= (215, 472)}
  ; {from= (805, 504); to_= (805, 476)}
  ; {from= (99, 909); to_= (99, 399)}
  ; {from= (64, 947); to_= (926, 85)}
  ; {from= (123, 645); to_= (153, 615)}
  ; {from= (908, 10); to_= (92, 826)}
  ; {from= (49, 174); to_= (819, 944)}
  ; {from= (115, 136); to_= (863, 884)}
  ; {from= (695, 91); to_= (695, 612)}
  ; {from= (715, 527); to_= (550, 362)}
  ; {from= (914, 125); to_= (914, 86)}
  ; {from= (14, 980); to_= (981, 13)}
  ; {from= (14, 308); to_= (14, 355)}
  ; {from= (356, 895); to_= (766, 485)}
  ; {from= (989, 10); to_= (10, 989)}
  ; {from= (833, 292); to_= (833, 184)}
  ; {from= (786, 785); to_= (733, 785)}
  ; {from= (824, 53); to_= (116, 53)}
  ; {from= (349, 547); to_= (349, 66)}
  ; {from= (594, 189); to_= (636, 189)}
  ; {from= (359, 399); to_= (769, 809)}
  ; {from= (600, 751); to_= (600, 46)}
  ; {from= (520, 236); to_= (228, 528)}
  ; {from= (978, 610); to_= (978, 832)}
  ; {from= (689, 575); to_= (258, 575)}
  ; {from= (664, 734); to_= (850, 920)}
  ; {from= (245, 672); to_= (245, 878)}
  ; {from= (337, 509); to_= (578, 509)}
  ; {from= (893, 613); to_= (380, 613)}
  ; {from= (875, 608); to_= (875, 444)}
  ; {from= (264, 701); to_= (946, 19)}
  ; {from= (358, 267); to_= (358, 648)}
  ; {from= (926, 61); to_= (926, 378)}
  ; {from= (46, 885); to_= (190, 885)}
  ; {from= (662, 131); to_= (82, 131)}
  ; {from= (301, 53); to_= (301, 533)}
  ; {from= (21, 839); to_= (915, 839)}
  ; {from= (92, 174); to_= (113, 174)}
  ; {from= (145, 680); to_= (294, 680)}
  ; {from= (268, 773); to_= (268, 193)}
  ; {from= (698, 893); to_= (809, 893)}
  ; {from= (300, 512); to_= (807, 512)}
  ; {from= (749, 408); to_= (279, 408)}
  ; {from= (439, 214); to_= (439, 172)}
  ; {from= (622, 740); to_= (339, 740)}
  ; {from= (400, 253); to_= (400, 486)}
  ; {from= (859, 686); to_= (387, 214)}
  ; {from= (974, 485); to_= (974, 486)}
  ; {from= (70, 987); to_= (951, 106)}
  ; {from= (630, 449); to_= (630, 544)}
  ; {from= (796, 212); to_= (608, 24)}
  ; {from= (835, 959); to_= (835, 725)}
  ; {from= (779, 755); to_= (96, 72)}
  ; {from= (582, 778); to_= (440, 636)}
  ; {from= (350, 479); to_= (827, 479)}
  ; {from= (924, 40); to_= (605, 40)}
  ; {from= (918, 832); to_= (918, 617)}
  ; {from= (669, 590); to_= (191, 112)}
  ; {from= (748, 214); to_= (748, 462)}
  ; {from= (350, 703); to_= (163, 703)}
  ; {from= (393, 791); to_= (393, 240)}
  ; {from= (569, 857); to_= (569, 939)}
  ; {from= (412, 375); to_= (412, 603)}
  ; {from= (488, 975); to_= (22, 509)}
  ; {from= (100, 372); to_= (100, 685)}
  ; {from= (170, 669); to_= (212, 669)}
  ; {from= (546, 734); to_= (546, 274)}
  ; {from= (492, 172); to_= (492, 354)}
  ; {from= (36, 134); to_= (801, 899)}
  ; {from= (501, 773); to_= (582, 773)}
  ; {from= (287, 694); to_= (287, 939)}
  ; {from= (381, 988); to_= (367, 988)}
  ; {from= (609, 360); to_= (609, 478)}
  ; {from= (310, 158); to_= (25, 443)}
  ; {from= (409, 716); to_= (409, 27)}
  ; {from= (655, 959); to_= (383, 687)}
  ; {from= (16, 697); to_= (611, 102)}
  ; {from= (184, 290); to_= (930, 290)}
  ; {from= (580, 79); to_= (598, 97)}
  ; {from= (950, 65); to_= (777, 65)}
  ; {from= (144, 288); to_= (821, 965)}
  ; {from= (986, 685); to_= (986, 412)}
  ; {from= (549, 702); to_= (549, 369)}
  ; {from= (841, 148); to_= (259, 730)}
  ; {from= (958, 31); to_= (958, 810)}
  ; {from= (12, 908); to_= (856, 64)}
  ; {from= (264, 793); to_= (264, 960)}
  ; {from= (249, 115); to_= (249, 935)}
  ; {from= (707, 714); to_= (108, 714)}
  ; {from= (527, 192); to_= (982, 647)}
  ; {from= (703, 883); to_= (703, 580)}
  ; {from= (535, 346); to_= (543, 346)}
  ; {from= (851, 185); to_= (83, 953)}
  ; {from= (984, 586); to_= (984, 681)}
  ; {from= (913, 574); to_= (350, 11)}
  ; {from= (317, 221); to_= (405, 221)}
  ; {from= (398, 673); to_= (160, 435)}
  ; {from= (953, 264); to_= (547, 670)}
  ; {from= (790, 115); to_= (538, 367)}
  ; {from= (943, 236); to_= (295, 884)}
  ; {from= (571, 746); to_= (571, 231)}
  ; {from= (286, 318); to_= (131, 318)}
  ; {from= (143, 251); to_= (436, 544)}
  ; {from= (838, 435); to_= (793, 435)}
  ; {from= (732, 782); to_= (732, 407)}
  ; {from= (244, 287); to_= (244, 335)}
  ; {from= (376, 29); to_= (75, 29)}
  ; {from= (604, 732); to_= (738, 732)}
  ; {from= (730, 30); to_= (533, 30)}
  ; {from= (891, 474); to_= (891, 25)}
  ; {from= (786, 140); to_= (368, 140)}
  ; {from= (951, 583); to_= (828, 460)}
  ; {from= (665, 897); to_= (44, 276)}
  ; {from= (217, 905); to_= (742, 905)}
  ; {from= (745, 583); to_= (256, 583)}
  ; {from= (923, 22); to_= (23, 922)}
  ; {from= (763, 336); to_= (943, 516)}
  ; {from= (755, 678); to_= (755, 101)}
  ; {from= (35, 790); to_= (706, 119)}
  ; {from= (841, 658); to_= (841, 634)}
  ; {from= (986, 66); to_= (986, 412)}
  ; {from= (740, 69); to_= (740, 878)}
  ; {from= (852, 733); to_= (453, 733)}
  ; {from= (657, 273); to_= (215, 715)}
  ; {from= (239, 824); to_= (239, 79)}
  ; {from= (340, 482); to_= (340, 238)}
  ; {from= (969, 834); to_= (303, 168)}
  ; {from= (238, 718); to_= (931, 718)}
  ; {from= (603, 63); to_= (603, 363)}
  ; {from= (596, 135); to_= (367, 135)}
  ; {from= (184, 474); to_= (184, 612)}
  ; {from= (39, 60); to_= (920, 941)}
  ; {from= (456, 103); to_= (894, 541)}
  ; {from= (929, 35); to_= (738, 35)}
  ; {from= (199, 528); to_= (707, 528)}
  ; {from= (649, 251); to_= (134, 766)}
  ; {from= (969, 209); to_= (719, 459)}
  ; {from= (568, 45); to_= (306, 307)}
  ; {from= (259, 703); to_= (426, 536)}
  ; {from= (964, 737); to_= (342, 115)}
  ; {from= (101, 890); to_= (604, 890)}
  ; {from= (57, 223); to_= (812, 978)}
  ; {from= (939, 99); to_= (167, 871)}
  ; {from= (920, 438); to_= (920, 247)}
  ; {from= (185, 384); to_= (643, 384)}
  ; {from= (489, 783); to_= (121, 415)}
  ; {from= (837, 938); to_= (250, 351)}
  ; {from= (63, 920); to_= (945, 38)}
  ; {from= (475, 45); to_= (510, 10)}
  ; {from= (881, 872); to_= (141, 132)}
  ; {from= (24, 238); to_= (24, 468)}
  ; {from= (409, 523); to_= (409, 706)}
  ; {from= (200, 309); to_= (631, 740)}
  ; {from= (586, 385); to_= (900, 385)}
  ; {from= (219, 250); to_= (219, 327)}
  ; {from= (854, 526); to_= (854, 725)}
  ; {from= (946, 343); to_= (946, 267)}
  ; {from= (847, 746); to_= (717, 616)}
  ; {from= (172, 203); to_= (346, 29)}
  ; {from= (693, 652); to_= (545, 652)}
  ; {from= (824, 115); to_= (192, 115)}
  ; {from= (843, 908); to_= (333, 908)}
  ; {from= (769, 784); to_= (662, 784)}
  ; {from= (490, 535); to_= (490, 524)}
  ; {from= (545, 699); to_= (11, 699)}
  ; {from= (792, 544); to_= (287, 39)}
  ; {from= (895, 712); to_= (895, 41)}
  ; {from= (887, 350); to_= (624, 350)}
  ; {from= (614, 475); to_= (924, 165)}
  ; {from= (93, 961); to_= (265, 789)}
  ; {from= (57, 71); to_= (852, 866)}
  ; {from= (282, 738); to_= (844, 176)}
  ; {from= (898, 251); to_= (898, 669)}
  ; {from= (949, 872); to_= (866, 872)}
  ; {from= (765, 408); to_= (545, 408)}
  ; {from= (691, 503); to_= (235, 959)}
  ; {from= (198, 491); to_= (227, 462)}
  ; {from= (973, 40); to_= (56, 957)}
  ; {from= (802, 402); to_= (752, 402)}
  ; {from= (911, 60); to_= (911, 932)}
  ; {from= (545, 244); to_= (110, 244)}
  ; {from= (461, 26); to_= (461, 18)}
  ; {from= (916, 308); to_= (161, 308)}
  ; {from= (368, 476); to_= (515, 476)}
  ; {from= (656, 916); to_= (409, 669)}
  ; {from= (118, 950); to_= (118, 135)}
  ; {from= (963, 294); to_= (365, 294)}
  ; {from= (855, 713); to_= (323, 713)}
  ; {from= (849, 930); to_= (48, 129)}
  ; {from= (36, 337); to_= (588, 889)}
  ; {from= (941, 394); to_= (941, 697)}
  ; {from= (685, 170); to_= (323, 170)}
  ; {from= (423, 683); to_= (423, 152)}
  ; {from= (81, 522); to_= (121, 522)}
  ; {from= (357, 598); to_= (159, 796)}
  ; {from= (211, 192); to_= (211, 50)}
  ; {from= (615, 607); to_= (270, 952)}
  ; {from= (687, 384); to_= (687, 128)}
  ; {from= (81, 896); to_= (925, 52)}
  ; {from= (591, 988); to_= (20, 988)}
  ; {from= (950, 740); to_= (605, 740)}
  ; {from= (818, 772); to_= (623, 772)}
  ; {from= (790, 405); to_= (790, 775)}
  ; {from= (483, 34); to_= (718, 34)}
  ; {from= (309, 190); to_= (309, 894)}
  ; {from= (391, 83); to_= (483, 83)}
  ; {from= (721, 201); to_= (721, 843)}
  ; {from= (990, 464); to_= (990, 171)}
  ; {from= (479, 707); to_= (688, 707)}
  ; {from= (23, 775); to_= (510, 775)}
  ; {from= (783, 863); to_= (867, 779)}
  ; {from= (594, 151); to_= (208, 151)}
  ; {from= (416, 936); to_= (416, 720)}
  ; {from= (981, 972); to_= (120, 111)}
  ; {from= (773, 476); to_= (138, 476)}
  ; {from= (604, 900); to_= (604, 395)}
  ; {from= (824, 437); to_= (531, 437)}
  ; {from= (621, 948); to_= (32, 948)}
  ; {from= (802, 26); to_= (887, 26)}
  ; {from= (836, 335); to_= (836, 784)}
  ; {from= (134, 585); to_= (634, 85)}
  ; {from= (649, 87); to_= (649, 263)}
  ; {from= (756, 804); to_= (638, 804)}
  ; {from= (982, 26); to_= (21, 987)}
  ; {from= (134, 976); to_= (914, 196)}
  ; {from= (612, 539); to_= (612, 141)}
  ; {from= (977, 11); to_= (22, 966)}
  ; {from= (40, 80); to_= (40, 644)}
  ; {from= (725, 562); to_= (604, 562)}
  ; {from= (377, 649); to_= (352, 624)}
  ; {from= (418, 146); to_= (130, 434)}
  ; {from= (848, 927); to_= (848, 970)}
  ; {from= (243, 350); to_= (342, 449)}
  ; {from= (46, 10); to_= (46, 112)}
  ; {from= (800, 654); to_= (272, 126)}
  ; {from= (910, 633); to_= (910, 426)}
  ; {from= (296, 619); to_= (882, 33)}
  ; {from= (75, 922); to_= (497, 500)}
  ; {from= (267, 616); to_= (864, 616)}
  ; {from= (884, 694); to_= (624, 694)}
  ; {from= (13, 656); to_= (831, 656)}
  ; {from= (389, 390); to_= (389, 316)}
  ; {from= (26, 24); to_= (987, 985)}
  ; {from= (193, 557); to_= (589, 161)}
  ; {from= (18, 13); to_= (978, 973)}
  ; {from= (43, 951); to_= (614, 951)}
  ; {from= (581, 398); to_= (885, 94)}
  ; {from= (943, 525); to_= (279, 525)}
  ; {from= (787, 83); to_= (137, 83)}
  ; {from= (729, 271); to_= (729, 18)}
  ; {from= (100, 383); to_= (100, 690)}
  ; {from= (337, 266); to_= (102, 266)}
  ; {from= (106, 640); to_= (298, 832)}
  ; {from= (83, 65); to_= (543, 65)}
  ; {from= (102, 872); to_= (663, 872)}
  ; {from= (921, 765); to_= (921, 782)}
  ; {from= (764, 392); to_= (471, 685)}
  ; {from= (325, 987); to_= (802, 987)}
  ; {from= (983, 43); to_= (983, 852)}
  ; {from= (833, 475); to_= (416, 58)}
  ; {from= (25, 270); to_= (686, 931)}
  ; {from= (145, 433); to_= (151, 433)}
  ; {from= (132, 329); to_= (973, 329)}
  ; {from= (611, 494); to_= (98, 494)}
  ; {from= (401, 633); to_= (866, 168)}
  ; {from= (532, 126); to_= (532, 448)}
  ; {from= (988, 894); to_= (361, 894)}
  ; {from= (249, 177); to_= (249, 133)}
  ; {from= (832, 71); to_= (832, 245)}
  ; {from= (263, 70); to_= (263, 152)}
  ; {from= (548, 333); to_= (548, 748)}
  ; {from= (98, 570); to_= (438, 910)}
  ; {from= (954, 41); to_= (41, 954)}
  ; {from= (336, 199); to_= (336, 843)}
  ; {from= (117, 974); to_= (845, 246)}
  ; {from= (831, 456); to_= (890, 515)}
  ; {from= (690, 114); to_= (804, 114)}
  ; {from= (94, 108); to_= (94, 672)}
  ; {from= (289, 104); to_= (107, 286)}
  ; {from= (248, 580); to_= (229, 580)}
  ; {from= (11, 284); to_= (885, 284)}
  ; {from= (401, 802); to_= (186, 802)}
  ; {from= (359, 245); to_= (558, 46)}
  ; {from= (310, 85); to_= (310, 714)}
  ; {from= (920, 577); to_= (979, 577)}
  ; {from= (492, 236); to_= (276, 452)}
  ; {from= (650, 961); to_= (49, 360)}
  ; {from= (118, 705); to_= (118, 794)}
  ; {from= (970, 24); to_= (80, 914)}
  ; {from= (943, 454); to_= (943, 30)}
  ; {from= (875, 935); to_= (716, 776)}
  ; {from= (241, 717); to_= (392, 717)}
  ; {from= (694, 345); to_= (620, 345)}
  ; {from= (533, 435); to_= (467, 435)}
  ; {from= (827, 166); to_= (374, 166)}
  ; {from= (633, 849); to_= (884, 849)}
  ; {from= (414, 640); to_= (875, 179)}
  ; {from= (240, 790); to_= (709, 321)}
  ; {from= (48, 222); to_= (104, 222)}
  ; {from= (889, 897); to_= (44, 52)}
  ; {from= (980, 438); to_= (455, 963)}
  ; {from= (469, 875); to_= (469, 706)}
  ; {from= (572, 869); to_= (250, 547)}
  ; {from= (834, 11); to_= (834, 188)}
  ; {from= (395, 966); to_= (395, 547)}
  ; {from= (12, 681); to_= (567, 681)}
  ; {from= (268, 957); to_= (947, 957)}
  ; {from= (450, 478); to_= (893, 921)}
  ; {from= (418, 707); to_= (602, 891)}
  ; {from= (404, 303); to_= (218, 489)}
  ; {from= (657, 232); to_= (657, 945)}
  ; {from= (518, 392); to_= (518, 621)}
  ; {from= (268, 959); to_= (896, 331)}
  ; {from= (886, 616); to_= (841, 616)}
  ; {from= (375, 503); to_= (375, 387)} ]

let () = main ~max_coord:(1000, 1000) input
